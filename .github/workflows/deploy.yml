name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        npm ci
        echo "Dependencies installed successfully"
      
    - name: Check environment variables before build
      run: |
        echo "Checking environment variables..."
        echo "NODE_ENV: $NODE_ENV"
        echo "VITE_GOOGLE_MAPS_API_KEY is set: ${{ secrets.VITE_GOOGLE_MAPS_API_KEY != '' && 'YES' || 'NO' }}"
        if [ -n "${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}" ]; then
          echo "API Key first 10 chars: $(echo '${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}' | cut -c1-10)..."
        else
          echo "API Key is empty or not set"
        fi
      env:
        NODE_ENV: production
        
    - name: Build
      run: npm run build
      env:
        VITE_GOOGLE_MAPS_API_KEY: ${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}
        NODE_ENV: production
    
    - name: Check environment variables
      run: |
        echo "API Key exists: ${{ secrets.VITE_GOOGLE_MAPS_API_KEY != '' && 'YES' || 'NO' }}"
        if [ -n "${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}" ]; then
          echo "API Key is set and not empty"
        else
          echo "API Key is empty or not set"
        fi
        
    - name: Check built files for API key
      run: |
        echo "Checking if API key is included in built files..."
        if grep -r "AIzaSy" dist/ 2>/dev/null; then
          echo "API key found in built files"
        else
          echo "API key NOT found in built files"
        fi
        echo "Checking for import.meta.env references:"
        grep -r "import\.meta\.env" dist/ 2>/dev/null || echo "No import.meta.env references found"
    
    - name: Create .nojekyll file
      run: touch dist/.nojekyll
    
    - name: Copy 404.html for SPA routing
      run: cp dist/404.html dist/404.html || echo "404.html already exists"
    
    - name: List build output
      run: ls -la dist/
      
    - name: Show index.html content
      run: head -20 dist/index.html
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
